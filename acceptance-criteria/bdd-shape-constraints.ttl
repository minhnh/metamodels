# SPDX-License-Identifier: GPL-3.0-or-later
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix bdd: <https://hbrs-sesame.github.io/metamodels/acceptance-criteria/bdd#> .
@prefix task: <https://hbrs-sesame.github.io/metamodels/task#> .

#######################################
# Constraints for scenario templates
#######################################
# A Scenario has exactly 1 GivenClause, WhenClause, and ThenClause
bdd:ScenarioShape
  a sh:NodeShape ;
  sh:targetClass bdd:Scenario ;
  sh:property [
    sh:path bdd:given ;
    sh:class bdd:GivenClause ;
    sh:nodeKind sh:IRI ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ] ;
  sh:property [
    sh:path bdd:when ;
    sh:class bdd:WhenClause ;
    sh:nodeKind sh:IRI ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ] ;
  sh:property [
    sh:path bdd:then ;
    sh:class bdd:ThenClause ;
    sh:nodeKind sh:IRI ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ] .

# bdd:GivenClause, bdd:WhenClause, and bdd:ThenClause must be associtated with exactly 1 bdd:Scenario
bdd:GivenClauseShape
  a sh:NodeShape ;
  sh:targetClass bdd:GivenClause ;
  sh:property [
    sh:path [ sh:inversePath bdd:given ] ;
    sh:class bdd:Scenario ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ] .
bdd:WhenClauseShape
  a sh:NodeShape ;
  sh:targetClass bdd:WhenClause ;
  sh:property [
    sh:path [ sh:inversePath bdd:when ] ;
    sh:class bdd:Scenario ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ] .
bdd:ThenClauseShape
  a sh:NodeShape ;
  sh:targetClass bdd:ThenClause ;
  sh:property [
    sh:path [ sh:inversePath bdd:then ] ;
    sh:class bdd:Scenario ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ] .

# bdd:of-scenario must refer to a bdd:Scenario
bdd:OfScenarioShape
  a sh:PropertyShape ;
  sh:description ":of-scenario must link to :Scenario" ;
  sh:path bdd:of-scenario ;
  sh:class bdd:Scenario ;
  sh:nodeKind sh:IRI ;
  sh:minCount 1 .

# A ScenarioVariable must be associated with 1 or more Scenario
bdd:ScenarioVariableShape
  a sh:NodeShape ;
  sh:targetClass bdd:ScenarioVariable ;
  sh:property bdd:OfScenarioShape .
bdd:OfVariableShape
  a sh:PropertyShape ;
  sh:description ":of-variable must link to at least 1 :ScenarioVariable" ;
  sh:path bdd:of-variable ;
  sh:class bdd:ScenarioVariable ;
  sh:nodeKind sh:IRI ;
  sh:minCount 1 .

# A FluentClause must be associated with
# - exactly 1 Predicate
# - 1 or more TimeConstraint
# - 1 or more GivenClause or ThenClause
bdd:FluentClauseShape
  a sh:NodeShape ;
  sh:targetClass bdd:FluentClause ;
  sh:property [
    sh:path bdd:predicate ;
    sh:nodeKind sh:IRI ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
  ] ;
  sh:property [
    sh:path bdd:time-constraint ;
    sh:class bdd:TimeConstraint ;
    sh:nodeKind sh:IRI ;
    sh:minCount 1 ;
  ] ;
  sh:property [
    sh:path bdd:clause-of ;
    sh:minCount 1 ;
    sh:or (
      [
        sh:class bdd:GivenClause ;
      ]
      [
        sh:class bdd:ThenClause ;
      ]
    )
  ] .

#######################################
# Constraints for scenario variants
#######################################
bdd:VariationShape
  a sh:NodeShape ;
  sh:targetClass task:Variation ;
  sh:and (
    bdd:OfVariableShape
    [
      sh:path bdd:of-variable ;
      sh:maxCount 1 ;
    ]
	) ;
  sh:property [
    sh:path task:can-be ;
    sh:nodeKind sh:IRI ;
    sh:minCount 1 ;
  ] .

bdd:ScenarioVariantShape
  a sh:NodeShape ;
  sh:targetClass bdd:ScenarioVariant ;
  sh:property bdd:OfScenarioShape ;
  sh:property [
    sh:path task:has-variation ;
    sh:class task:Variation ;
    sh:nodeKind sh:IRI ;
    sh:minCount 1 ;
  ] .

bdd:UserStoryShape
  a sh:NodeShape ;
  sh:targetClass bdd:UserStory ;
  sh:property [
    sh:path bdd:has-criteria ;
    sh:class bdd:ScenarioVariant ;
    sh:nodeKind sh:IRI ;
    sh:minCount 1 ;
  ] .
